<html>
<head>
    <title>Media Explorer</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/css/style.css" />
    <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet" />
    <script src="js/jquery-1.12.4.min.js"></script>
    <script src="js/mousetrap.min.js"></script>
</head>
<body>
<div class="container">
    <div class="mediaContent section">
        <div class="videoPlayer">
            <video controls id="video">
                <source src="<%=  %>" type="video/mp4" id="source">
            </video>
        </div>
        <div class="icons-container">
            <img class="icons backward" src="img/fast-forward.png" alt="">
            <img class="icons reset-speed" src="img/settings.png" alt="">
            <img class="icons forward" src="img/fast-forward.png" alt="">
        </div>
        <div class="speed-container">
            <p>Speed: <span id="speed">1</span>x</p>
        </div>
        <!--<div class="backward-section"></div>-->
        <!--<div class="forward-section"></div>-->
    </div>
    <div class="mediaListing section">
        <div class="activeDirectory">
            <img src="img/left-arrow.png" class="back-btn" alt="">
            <p class="active-dir">WebpackFundamentals</p>
        </div>
        <div class="foldersContent"></div>
    </div>
</div>
</body>
<script>
  $(document).ready(function(){
    var video = $('#video').get(0);
    var tree = <%- tree %>
    console.log(tree);
    var pathsStack = [tree.path];
    $('.active-dir').text(tree.path);
    appendFolders(tree.children);
    isPlaying = false;
    function togglePlay() {
      if( isPlaying === true ) {
        isPlaying = false;
        video.pause();
      }else{
        isPlaying = true;
        video.play();
      }
    }
    function appendFolders(data) {
      var str = '';
      for(var l = 0; l < data.length; l++){
        str += '<div class="media" data-url="' + data[l].path + '" data-type="' + data[l].type + '"><p class="name">' + data[l].name + '</p></div>';
      }
      $('.foldersContent').html('').append(str);
    }

    function getChildren(obj, path) {
      if( obj.path === path ) return obj.children;
      if(obj.children){
          for(var g = 0; g < obj.children.length; g++){
              var ret = getChildren(obj.children[g], path);
              if( ret ){
                return ret;
              }
          }
      }
    }

    $(document).on('click', '.media', function (e) {
      if($(this).data('type') === 'file'){
          $('#source').attr('src', $(this).data('url'));
          video.load();
          video.play();
          isPlaying = true;
          $('.media').removeClass('active');
          $(this).addClass('active');
      }else if($(this).data('type') === 'folder'){
        var path = $(this).data('url');
        pathsStack.push(path);
        $('.active-dir').text(path.split('/').splice(-1)[0]);
        var children = getChildren(tree, path);
        appendFolders(children);
      }
    });

    Mousetrap.bind(['left'], function(e) {
        video.currentTime -= 5;
    });
    Mousetrap.bind(['right'], function(e) {
      video.currentTime += 5;
    });
    Mousetrap.bind(['down'], function(e) {
      if(video.playbackRate > 0.25){
        $('#speed').text(parseFloat(video.playbackRate.toFixed(2)) - 0.25);
        video.playbackRate = parseFloat(video.playbackRate.toFixed(2)) - 0.25;
      }
    });
    Mousetrap.bind(['up'], function(e) {
      if(video.playbackRate < 5){
        $('#speed').text(parseFloat(video.playbackRate.toFixed(2)) + 0.25);
        video.playbackRate = parseFloat(video.playbackRate.toFixed(2)) + 0.25;
      }
    });
    Mousetrap.bind(['shift+up'], function(e) {
      if( video.volume < 1 ) {
        video.volume = parseFloat(video.volume.toFixed(2)) + 0.2;
      }
    });
    Mousetrap.bind(['shift+down'], function(e) {
      if( video.volume > 0 ){
        video.volume = parseFloat(video.volume.toFixed(2)) - 0.2;
      }
    });
    $(document).on('click', '.mediaContent', function(e){
      togglePlay();
    });
    $(document).on('click', '.reset-speed', function(e){
      e.stopPropagation();
      e.preventDefault();
      $('#speed').text(1);
      video.playbackRate = 1;
    });
    $(document).on('click', '.forward', function(e){
      e.stopPropagation();
      e.preventDefault();
      video.currentTime += 5;
    });
    $(document).on('click', '.back-btn', function(e){
      if(pathsStack.length === 1) return;
      pathsStack.pop();
      $('.active-dir').text(pathsStack[pathsStack.length - 1].split('/').splice(-1)[0]);
      var children = getChildren(tree, pathsStack[pathsStack.length - 1]);
      appendFolders(children);
    });
    $(document).on('click', '.backward', function(e){
      e.stopPropagation();
      e.preventDefault();
      video.currentTime -= 5;
    });
    Mousetrap.bind(['space'], function(e) {
      togglePlay();
    });
    Mousetrap.bind(['enter'], function(e) {
      $('#speed').text(1);
      video.playbackRate = 1;
    });
  });
</script>
</html>